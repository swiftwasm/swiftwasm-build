From a6c12e094868570e92379826442980ff7246515f Mon Sep 17 00:00:00 2001
From: Yuta Saito <kateinoigakukun@gmail.com>
Date: Tue, 20 Jun 2023 08:26:32 +0000
Subject: [PATCH] [stdlib] Fix calling convention mismatch for
 swift_COWChecksEnabled

`ContiguousArrayBuffer.swift` calls `swift_COWChecksEnabled` with the
Swift calling convention, but the functions is defined with the C calling
convention. This mismatch actually happens only when building with
`enable-array-cow-checks` (which is not enabled by default).
Also ideal fix would be to put `@_cdecl` on the function declared in
Swift-side to choose the correct calling convention. `@cdecl` without
body is not supported yet but discussed in https://forums.swift.org/t/formalizing-cdecl/40677
---
 stdlib/public/runtime/EnvironmentVariables.cpp | 1 +
 1 file changed, 1 insertion(+)

diff --git a/stdlib/public/runtime/EnvironmentVariables.cpp b/stdlib/public/runtime/EnvironmentVariables.cpp
index 264e44a4db6..3a04eb9c928 100644
--- a/stdlib/public/runtime/EnvironmentVariables.cpp
+++ b/stdlib/public/runtime/EnvironmentVariables.cpp
@@ -253,6 +253,7 @@ void swift::runtime::environment::initialize(void *context) {
 }
 #endif
 
+SWIFT_CC(swift)
 SWIFT_RUNTIME_EXPORT
 bool swift_COWChecksEnabled() {
   return runtime::environment::SWIFT_DEBUG_ENABLE_COW_CHECKS();
-- 
2.40.0

