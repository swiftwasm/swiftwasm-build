name: Distribute toolchain
on:
  workflow_call:
    inputs:
      scheme:
        required: true
        type: string
      run-id:
        required: true
        type: string
      display-name:
        type: string
      display-name-short:
        type: string
      override-name:
        type: string

jobs:
  distribution:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: swiftwasm/swiftwasm-build
      - name: Setup environment variables
        run: |
          if [[ -n "${{ github.event.inputs.display-name }}" ]]; then
            echo "DARWIN_TOOLCHAIN_DISPLAY_NAME=${{ github.event.inputs.display-name }}" >> $GITHUB_ENV
          fi
          if [[ -n "${{ github.event.inputs.display-name-short }}" ]]; then
            echo "DARWIN_TOOLCHAIN_DISPLAY_NAME_SHORT=${{ github.event.inputs.display-name-short }}" >> $GITHUB_ENV
          fi
          if [[ -n "${{ github.event.inputs.override-name }}" ]]; then
            echo "GH_DISTRIBUTE_TOOLCHAIN_OVERRIDE_NAME=${{ github.event.inputs.override-name }}" >> $GITHUB_ENV
          fi
      - name: Setup keychain
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" swiftwasm-ci
          KEYCHAIN=$HOME/Library/Keychains/swiftwasm-ci-db
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN
          security set-keychain-settings -lut 7200 $KEYCHAIN
          security default-keychain -s $KEYCHAIN

          echo "$DARWIN_TOOLCHAIN_APPLICATION_CERT_BASE64" | base64 --decode -o developerID_application.p12
          security import developerID_application.p12 -P "$DARWIN_TOOLCHAIN_APPLICATION_CERT_PASSWORD" -T /usr/bin/pkgbuild -T /usr/bin/codesign
          echo "$DARWIN_TOOLCHAIN_INSTALLER_CERT_BASE64" | base64 --decode -o developerID_installer.p12
          security import developerID_installer.p12 -P "$DARWIN_TOOLCHAIN_INSTALLER_CERT_PASSWORD" -T /usr/bin/pkgbuild -T /usr/bin/codesign

          security set-key-partition-list -S "apple-tool:,apple:" -s -k "$KEYCHAIN_PASSWORD" $KEYCHAIN
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          DARWIN_TOOLCHAIN_APPLICATION_CERT: ${{ secrets.DARWIN_TOOLCHAIN_APPLICATION_CERT }}
          DARWIN_TOOLCHAIN_APPLICATION_CERT_BASE64: ${{ secrets.DARWIN_TOOLCHAIN_APPLICATION_CERT_BASE64 }}
          DARWIN_TOOLCHAIN_APPLICATION_CERT_PASSWORD: ${{ secrets.DARWIN_TOOLCHAIN_APPLICATION_CERT_PASSWORD }}
          DARWIN_TOOLCHAIN_INSTALLER_CERT: ${{ secrets.DARWIN_TOOLCHAIN_INSTALLER_CERT }}
          DARWIN_TOOLCHAIN_INSTALLER_CERT_BASE64: ${{ secrets.DARWIN_TOOLCHAIN_INSTALLER_CERT_BASE64 }}
          DARWIN_TOOLCHAIN_INSTALLER_CERT_PASSWORD: ${{ secrets.DARWIN_TOOLCHAIN_INSTALLER_CERT_PASSWORD }}

      - run: ./tools/gh-distribute-toolchain --scheme ${{ inputs.scheme }} --verbose --skip-history ${{ inputs.run-id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILDBOT_GITHUB_TOKEN: ${{ secrets.SWIFTWASM_BUILDBOT_TOKEN }}
          DARWIN_TOOLCHAIN_APPLICATION_CERT: ${{ secrets.DARWIN_TOOLCHAIN_APPLICATION_CERT }}
          DARWIN_TOOLCHAIN_INSTALLER_CERT: ${{ secrets.DARWIN_TOOLCHAIN_INSTALLER_CERT }}
          DARWIN_TOOLCHAIN_NOTARIZE_EMAIL: ${{ secrets.DARWIN_TOOLCHAIN_NOTARIZE_EMAIL }}
          DARWIN_TOOLCHAIN_NOTARIZE_PASSWORD: ${{ secrets.DARWIN_TOOLCHAIN_NOTARIZE_PASSWORD }}
          DARWIN_TOOLCHAIN_NOTARIZE_TEAM_ID: ${{ secrets.DARWIN_TOOLCHAIN_NOTARIZE_TEAM_ID }}
