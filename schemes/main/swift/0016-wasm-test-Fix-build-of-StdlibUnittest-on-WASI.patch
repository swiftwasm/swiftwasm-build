From 75f7971a35691d0e296818bd9951c146cf202335 Mon Sep 17 00:00:00 2001
From: Yuta Saito <kateinoigakukun@gmail.com>
Date: Tue, 20 Jun 2023 07:53:38 +0000
Subject: [PATCH] [wasm][test] Fix build of StdlibUnittest on WASI

WASI platform doesn't support crash interception and spawning
threads/processes. So this patch disables interception support and
subprocess spawning. The later patch will disable crash tests in each
test case.
---
 stdlib/private/StdlibUnittest/InterceptTraps.cpp   | 12 ++----------
 stdlib/private/StdlibUnittest/StdlibUnittest.swift | 12 ++++++++++--
 2 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/stdlib/private/StdlibUnittest/InterceptTraps.cpp b/stdlib/private/StdlibUnittest/InterceptTraps.cpp
index 80c3fa59795..363d37ea725 100644
--- a/stdlib/private/StdlibUnittest/InterceptTraps.cpp
+++ b/stdlib/private/StdlibUnittest/InterceptTraps.cpp
@@ -10,12 +10,10 @@
 //
 //===----------------------------------------------------------------------===//
 
-// No signals support on WASI yet, see https://github.com/WebAssembly/WASI/issues/166.
-#if !defined(__wasi__)
 #include <stdio.h>
 #include <signal.h>
 #include <string.h>
-#if defined(__unix__) || (defined(__APPLE__) && defined(__MACH__))
+#if defined(__unix__) || (defined(__APPLE__) && defined(__MACH__)) || defined(__wasi__)
 #include <unistd.h>
 #endif
 #if defined(_WIN32)
@@ -50,8 +48,6 @@ static void CrashCatcher(int Sig) {
   _exit(0);
 }
 
-#endif // __wasi__
-
 #if defined(_WIN32)
 static LONG WINAPI
 VectoredCrashHandler(PEXCEPTION_POINTERS ExceptionInfo) {
@@ -74,9 +70,6 @@ void installTrapInterceptor() {
   // Disable buffering on stdout so that everything is printed before crashing.
   setbuf(stdout, 0);
 
-// No signals support on WASI yet, see https://github.com/WebAssembly/WASI/issues/166.
-#if !defined(__wasi__)
-
 #if defined(_WIN32)
   _set_abort_behavior(0, _WRITE_ABORT_MSG);
 #endif
@@ -92,6 +85,5 @@ void installTrapInterceptor() {
   signal(SIGBUS,  CrashCatcher);
   signal(SIGSYS,  CrashCatcher);
 #endif
-}
 
-#endif // !defined(__wasi__)
+}
diff --git a/stdlib/private/StdlibUnittest/StdlibUnittest.swift b/stdlib/private/StdlibUnittest/StdlibUnittest.swift
index 9cb21b7d6d1..71762d59988 100644
--- a/stdlib/private/StdlibUnittest/StdlibUnittest.swift
+++ b/stdlib/private/StdlibUnittest/StdlibUnittest.swift
@@ -22,6 +22,8 @@ import Foundation
 import Darwin
 #elseif canImport(Glibc)
 import Glibc
+#elseif os(WASI)
+import WASILibc
 #elseif os(Windows)
 import CRT
 import WinSDK
@@ -35,6 +37,12 @@ import ObjectiveC
 import _Concurrency
 #endif
 
+#if os(WASI)
+let platformSupportSpawnChild = false
+#else
+let platformSupportSpawnChild = true
+#endif
+
 extension String {
   /// Returns the lines in `self`.
   public var _lines : [String] {
@@ -1724,7 +1732,7 @@ public func runAllTests() {
   if _isChildProcess {
     _childProcess()
   } else {
-    var runTestsInProcess: Bool = false
+    var runTestsInProcess: Bool = !platformSupportSpawnChild
     var filter: String?
     var args = [String]()
     var i = 0
@@ -1794,7 +1802,7 @@ public func runAllTestsAsync() async {
   if _isChildProcess {
     await _childProcessAsync()
   } else {
-    var runTestsInProcess: Bool = false
+    var runTestsInProcess: Bool = !platformSupportSpawnChild
     var filter: String?
     var args = [String]()
     var i = 0
-- 
2.40.0

