From 3b8b9e773c1c1791d383721519556d1d8de3d6fb Mon Sep 17 00:00:00 2001
From: Yuta Saito <kateinoigakukun@gmail.com>
Date: Sat, 9 Mar 2024 08:36:38 +0000
Subject: [PATCH] [wasm] Follow-up dispatch fix for CFStream.c

This patch is a follow-up fix for
efc01825039b5d0c59310fc8b59ce483a4b57dd1 to fix undefined symbol
reference against excluded CFRunLoop APIs.
---
 CoreFoundation/Stream.subproj/CFStream.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/CoreFoundation/Stream.subproj/CFStream.c b/CoreFoundation/Stream.subproj/CFStream.c
index d2646083..1cfeeb65 100644
--- a/CoreFoundation/Stream.subproj/CFStream.c
+++ b/CoreFoundation/Stream.subproj/CFStream.c
@@ -1385,6 +1385,7 @@ CF_EXPORT void *_CFWriteStreamGetClient(CFWriteStreamRef writeStream) {
 CF_PRIVATE void _CFStreamScheduleWithRunLoop(struct _CFStream *stream, CFRunLoopRef runLoop, CFStringRef runLoopMode) {
     const struct _CFStreamCallBacks *cb = _CFStreamGetCallBackPtr(stream);
     
+#if __HAS_DISPATCH__
     if (! stream->client) {
         _initializeClient(stream);
         if (!stream->client) return; // we don't support asynch.
@@ -1530,7 +1531,6 @@ CF_PRIVATE void _CFStreamScheduleWithRunLoop(struct _CFStream *stream, CFRunLoop
         __CFBitClear(stream->flags, CALLING_CLIENT);
     }
     
-#if __HAS_DISPATCH__
     /*
      * If we've got events pending, we need to wake up and signal
      */
-- 
2.43.0

