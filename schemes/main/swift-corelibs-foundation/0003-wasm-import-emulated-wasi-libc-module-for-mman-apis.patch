From c5916cb46be23dc2d18f84f7485a18e50f673cc2 Mon Sep 17 00:00:00 2001
From: Yuta Saito <kateinoigakukun@gmail.com>
Date: Sun, 29 Oct 2023 00:39:00 +0000
Subject: [PATCH] [wasm] import emulated wasi-libc module for mman apis

---
 Sources/Foundation/Data.swift       |  1 +
 Sources/Foundation/FileHandle.swift | 10 ++++++++++
 2 files changed, 11 insertions(+)

diff --git a/Sources/Foundation/Data.swift b/Sources/Foundation/Data.swift
index 86585a3a..6e5bfdb6 100644
--- a/Sources/Foundation/Data.swift
+++ b/Sources/Foundation/Data.swift
@@ -29,6 +29,7 @@
 @usableFromInline let memcpy = Glibc.memcpy
 @usableFromInline let memcmp = Glibc.memcmp
 #elseif canImport(WASILibc)
+@_implementationOnly import wasi_emulated_mman
 @usableFromInline let calloc = WASILibc.calloc
 @usableFromInline let malloc = WASILibc.malloc
 @usableFromInline let free = WASILibc.free
diff --git a/Sources/Foundation/FileHandle.swift b/Sources/Foundation/FileHandle.swift
index a538a297..6da1d666 100644
--- a/Sources/Foundation/FileHandle.swift
+++ b/Sources/Foundation/FileHandle.swift
@@ -22,6 +22,16 @@ import Glibc
 fileprivate let _read = Glibc.read(_:_:_:)
 fileprivate let _write = Glibc.write(_:_:_:)
 fileprivate let _close = Glibc.close(_:)
+#elseif canImport(WASILibc)
+import WASILibc
+@_implementationOnly import wasi_emulated_mman
+fileprivate let _read = WASILibc.read(_:_:_:)
+fileprivate let _write = WASILibc.write(_:_:_:)
+fileprivate let _close = WASILibc.close(_:)
+// wasi-libc's errno is defined as an usual TLS variable, so ClangImporter can import it through CoreFoundation
+// while other platforms' are not importable due to their complex macro definition. Imported errno conflicts with
+// WASILibc's errno definition, so define a Foundation internal version here to avoid ambiguity error.
+internal var errno: Int32 { return WASILibc.errno }
 #endif
 
 #if canImport(WinSDK)
-- 
2.43.0

