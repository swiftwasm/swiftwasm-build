From 7e4cdc1b0163c1a3afdd35da87d4f25b50aa22be Mon Sep 17 00:00:00 2001
From: Yuta Saito <kateinoigakukun@gmail.com>
Date: Wed, 7 Aug 2024 05:13:38 +0000
Subject: [PATCH] [CMake] Disable libdispatch & threads, enable some emulations
 on WASI

This commit disables libdispatch and threads on WASI, and enables
wasi-libc emulation features.
---
 CMakeLists.txt | 36 +++++++++++++++---------------------
 1 file changed, 15 insertions(+), 21 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1fbdee6a..e7d0ebcf 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -125,7 +125,7 @@ endif()
 # System dependencies
 find_package(LibRT)
 find_package(dispatch CONFIG)
-if(NOT dispatch_FOUND)
+if(NOT dispatch_FOUND AND NOT CMAKE_SYSTEM_NAME STREQUAL WASI)
     if(CMAKE_SYSTEM_NAME STREQUAL "Linux" OR CMAKE_SYSTEM_NAME STREQUAL "Android")
         set(DEFAULT_DISPATCH_INCLUDE_PATH "/usr/lib/swift")
     elseif(CMAKE_SYSTEM_NAME STREQUAL "Windows")
@@ -144,7 +144,6 @@ find_package(CURL REQUIRED)
 list(APPEND _Foundation_common_build_flags
     "-DDEPLOYMENT_RUNTIME_SWIFT"
     "-DCF_BUILDING_CF"
-    "-DDEPLOYMENT_ENABLE_LIBDISPATCH"
     "-DHAVE_STRUCT_TIMESPEC"
     "-Wno-shorten-64-to-32"
     "-Wno-deprecated-declarations"
@@ -157,16 +156,10 @@ list(APPEND _Foundation_common_build_flags
     "-Wno-switch"
     "-fblocks")
 
-if(CMAKE_SYSTEM_NAME STREQUAL "WASI")
-  list(APPEND _Foundation_common_build_flags
-    "-D_WASI_EMULATED_SIGNAL"
-    "-DHAVE_STRLCPY"
-    "-DHAVE_STRLCAT"
-  )
-else()
-  list(APPEND _Foundation_common_build_flags
-    "-DSWIFT_CORELIBS_FOUNDATION_HAS_THREADS"
-  )
+if(NOT CMAKE_SYSTEM_NAME STREQUAL WASI)
+    list(APPEND _Foundation_common_build_flags
+        "-DDEPLOYMENT_ENABLE_LIBDISPATCH"
+        "-DSWIFT_CORELIBS_FOUNDATION_HAS_THREADS")
 endif()
 
 if(NOT "${CMAKE_C_SIMULATE_ID}" STREQUAL "MSVC")
@@ -199,16 +192,17 @@ list(APPEND _Foundation_swift_build_flags
     "-Xfrontend"
     "-require-explicit-sendable")
 
-if(CMAKE_SYSTEM_NAME STREQUAL "WASI")
-  list(APPEND _Foundation_swift_build_flags
-    "-D_WASI_EMULATED_SIGNAL"
-    "-DHAVE_STRLCPY"
-    "-DHAVE_STRLCAT"
-  )
+if(CMAKE_SYSTEM_NAME STREQUAL WASI)
+    # Enable wasi-libc emulation features
+    set(WASI_EMULATION_DEFS _WASI_EMULATED_MMAN _WASI_EMULATED_SIGNAL _WASI_EMULATED_PROCESS_CLOCKS)
+    foreach(def ${WASI_EMULATION_DEFS})
+        list(APPEND _Foundation_swift_build_flags "SHELL:-Xcc -D${def}")
+        list(APPEND _Foundation_common_build_flags "-D${def}")
+    endforeach()
 else()
-  list(APPEND _Foundation_swift_build_flags
-    "-DSWIFT_CORELIBS_FOUNDATION_HAS_THREADS"
-  )
+    # Assume we have threads on other platforms
+    list(APPEND _Foundation_swift_build_flags
+        "-DSWIFT_CORELIBS_FOUNDATION_HAS_THREADS")
 endif()
 
 if(CMAKE_SYSTEM_NAME STREQUAL "Linux" OR CMAKE_SYSTEM_NAME STREQUAL "Android")
-- 
2.43.2

