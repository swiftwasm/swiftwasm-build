import os

if not config.root.swift_sdk:
    config.unsupported = True
else:
    bin_path = os.path.join(config.root.base_toolchain_path, "usr", "bin")

    swift = os.path.join(bin_path, "swift")
    config.substitutions.append(("%{swift}", swift))

    swift_sdk_options = f"--swift-sdk {config.root.swift_sdk}"
    if config.root.swift_sdks_path:
        swift_sdk_options += f" --swift-sdks-path {config.root.swift_sdks_path}"
    config.substitutions.append(("%{swift_sdk_options}", swift_sdk_options))
    target_swift_build = f"{swift} build {swift_sdk_options}"
    config.substitutions.append(("%{target_swift_build}", target_swift_build))

    copy_cmd = 'cp %s %t.dir/Sources/Check/Check.swift'
    if config.root.scheme in ["release-6.0", "release-6.1"]:
        copy_cmd = 'cp %s %t.dir/Sources/main.swift'

    simple_swift_build_steps = [
        'rm -rf %t.dir',
        'mkdir -p %t.dir',
        f'{swift} package init --package-path %t.dir --name Check --type executable',
        copy_cmd,
        f'{target_swift_build} --package-path %t.dir',
    ]
    config.substitutions.append(("%{target_simple_swift_build}", " && ".join(simple_swift_build_steps)))
