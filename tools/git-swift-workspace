#!/usr/bin/env python3
# git-swift-workspace - A script to create a workspace for a Swift project applying patches
#
# Usage: git-swift-workspace [options]
#
# The basic flow of this script is:
# 1. `git clone https://github.com/apple/swift.git ../swift` if needed
# 2. `./swift/utils/update-checkout --clone --scheme <scheme>` to clone all the dependencies
# 3. `git am patches/<scheme>/*.patch` to apply all the patches

import sys
import argparse
from build.build_support.actions import *

def main():
    parser = argparse.ArgumentParser(description='A script to create a workspace for a Swift project applying patches')
    parser.add_argument("-Xupdate-checkout",
                        dest="extra_update_checkout_args",
                        help="Pass additional arguments to update-checkout",
                        action="append",
                        default=[])
    options = derive_options_from_args(sys.argv[1:], parser)
    actions = [
        CloneAction(options), UpdateCheckoutAction(options),
        ApplyPatchesAction(options, 'swift'),
        CheckoutCorelibsAction(options),
        ApplyPatchesAction(options, 'swift-corelibs-foundation'),
        ApplyPatchesAction(options, 'swift-corelibs-xctest'),
    ]

    ActionRunner(actions).run()

if __name__ == '__main__':
    main()
