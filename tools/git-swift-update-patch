#!/usr/bin/env ruby

def main
  require 'optparse'
  require "pathname"
  require "json"

  options = {}
  OptionParser.new do |opts|
    opts.banner = "Usage: git-swift-update-patch [options]"

    opts.on("-s", "--scheme SCHEME", "The scheme to use") do |v|
      options[:scheme] = v
    end
  end.parse!

  manifest = JSON.parse(File.read(File.join(File.dirname(__FILE__), '../manifest.json')))

  patches_path = File.absolute_path(File.join(File.dirname(__FILE__), '../patches', options[:scheme]))
  upstream_rev = manifest['schemes'][options[:scheme]]['tag']

  unless `git status --porcelain`.empty?
    puts "Patch set repository is not clean"
    exit 1
  end

  Dir.chdir(File.join(File.dirname(__FILE__), '..')) do
    Kernel.system(*[
      'git', '-C', "../swift",
      'format-patch', '--no-numbered', upstream_rev,
      "-o", Pathname.new(patches_path).relative_path_from(File.absolute_path("../swift")).to_s,
    ], exception: true)
  end
end

main if __FILE__ == $0
